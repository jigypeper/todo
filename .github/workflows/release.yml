name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: todo
            asset_name: todo-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: todo.exe
            asset_name: todo-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: todo
            asset_name: todo-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: todo
            asset_name: todo-macos-aarch64

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }}
      
    - name: Prepare binary
      shell: bash
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} ${{ matrix.asset_name }}
        else
          cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} ${{ matrix.asset_name }}
          chmod +x ${{ matrix.asset_name }}
        fi
        
    - name: Upload binary as artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.asset_name }}
        path: ${{ matrix.asset_name }}

  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          todo-linux-x86_64/todo-linux-x86_64
          todo-windows-x86_64.exe/todo-windows-x86_64.exe
          todo-macos-x86_64/todo-macos-x86_64
          todo-macos-aarch64/todo-macos-aarch64
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## Changes
          
          Release ${{ github.ref_name }} of the todo CLI application.
          
          ## Installation
          
          Download the appropriate binary for your platform from the assets below.
          
          ### Linux/macOS
          ```bash
          chmod +x todo-*
          sudo mv todo-* /usr/local/bin/todo
          ```
          
          ### Windows
          Place the executable in a directory that's in your PATH.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}